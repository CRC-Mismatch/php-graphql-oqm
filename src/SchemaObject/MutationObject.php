<?php

declare(strict_types=1);

namespace GraphQL\SchemaObject;

use GraphQL\QueryBuilder\MutationBuilder;

/**
 * An abstract class that acts as the base for all schema query objects generated by the SchemaClassGenerator.
 *
 * Class MutationObject
 */
abstract class MutationObject extends MutationBuilder
{
    /**
     * This constant stores the name to be given to the root query object.
     *
     * @var string
     */
    public const ROOT_MUTATION_OBJECT_NAME = 'Root';

    /**
     * This constant stores the name of the object name in the API definition.
     *
     * @var string
     */
    protected const OBJECT_NAME = '';

    /**
     * SchemaObject constructor.
     */
    public function __construct(string $fieldName = '')
    {
        $queryObject = !empty($fieldName) ? $fieldName : static::OBJECT_NAME;
        parent::__construct($queryObject);
    }

    /**
     * @return $this
     */
    protected function appendArguments(array $arguments): MutationObject
    {
        foreach ($arguments as $argName => $argValue) {
            if ($argValue instanceof InputObject) {
                $argValue = $argValue->toRawObject();
            }

            $this->setArgument($argName, $argValue);
        }

        return $this;
    }
}
